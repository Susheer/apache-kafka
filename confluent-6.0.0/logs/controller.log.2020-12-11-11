[2020-12-11 21:11:31,032] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-12-11 21:11:31,034] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-12-11 21:11:31,045] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-12-11 21:11:31,047] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-12-11 21:11:31,068] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-12-11 21:11:31,267] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-12-11 21:11:31,267] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-12-11 21:11:31,282] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-12-11 21:11:31,300] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-12-11 21:11:31,312] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-12-11 21:11:31,332] INFO [Controller id=1] Initialized broker epochs cache: HashMap(0 -> 68, 1 -> 66, 3 -> 71) (kafka.controller.KafkaController)
[2020-12-11 21:11:31,335] DEBUG [Controller id=1] Register BrokerModifications handler for Set(0, 1, 3) (kafka.controller.KafkaController)
[2020-12-11 21:11:31,349] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-12-11 21:11:31,361] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-12-11 21:11:31,374] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-12-11 21:11:31,385] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1, 3) (kafka.controller.KafkaController)
[2020-12-11 21:11:31,386] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,386] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,387] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,395] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-12-11 21:11:31,396] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-12-11 21:11:31,396] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-12-11 21:11:31,399] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,399] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,400] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-12-11 21:11:31,400] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-12-11 21:11:31,401] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-12-11 21:11:31,430] INFO [RequestSendThread controllerId=1] Controller 1 connected to kali:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,434] INFO [RequestSendThread controllerId=1] Controller 1 connected to kali:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,439] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-12-11 21:11:31,441] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-12-11 21:11:31,455] INFO [RequestSendThread controllerId=1] Controller 1 connected to kali:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-12-11 21:11:31,459] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-12-11 21:11:31,459] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-12-11 21:11:31,460] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-12-11 21:11:31,461] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-12-11 21:11:31,467] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-12-11 21:11:31,467] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-12-11 21:11:31,474] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,475] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,476] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,476] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-12-11 21:11:31,478] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-12-11 21:11:31,496] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-12-11 21:11:36,503] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:11:36,504] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:16:36,513] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:16:36,514] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:21:36,518] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:21:36,518] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:26:36,519] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:26:36,519] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:31:36,521] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:31:36,522] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:36:36,524] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:36:36,524] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:41:36,525] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:41:36,525] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:46:36,526] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:46:36,526] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:51:36,528] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:51:36,528] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-12-11 21:56:36,530] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-12-11 21:56:36,530] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
